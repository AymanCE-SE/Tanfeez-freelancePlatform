# Generated by Django 5.2.4 on 2025-07-04 17:03

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('skill', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('issuer', models.CharField(blank=True, max_length=255, null=True)),
                ('year', models.CharField(blank=True, max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree', models.CharField(max_length=255)),
                ('school', models.CharField(max_length=255)),
                ('year', models.CharField(blank=True, max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Freelancer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('experience_level', models.CharField(blank=True, choices=[('junior', 'Junior'), ('mid', 'Mid-Level'), ('senior', 'Senior')], default='junior', help_text='The experience level of the freelancer.', max_length=10, null=True)),
                ('cv', models.URLField(blank=True, help_text="URL to the freelancer's CV.", null=True)),
                ('portfolio', models.URLField(blank=True, help_text="URL to the freelancer's portfolio.", null=True)),
                ('is_tested', models.BooleanField(default=False, help_text='Whether the freelancer has been tested.')),
                ('is_verified', models.BooleanField(default=False, help_text='Whether the freelancer is verified.')),
                ('is_deleted', models.BooleanField(default=False, help_text='Soft delete flag for the freelancer.')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp of when the freelancer profile was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp of the last update to the freelancer profile.')),
                ('languages', models.TextField(blank=True, help_text='Languages the freelancer speaks (comma-separated)', null=True)),
                ('qualities', models.TextField(blank=True, help_text='Personal qualities or expertise that define the freelancer', null=True)),
                ('certifications', models.ManyToManyField(blank=True, related_name='freelancers', to='freelancer.certification')),
                ('educations', models.ManyToManyField(blank=True, related_name='freelancers', to='freelancer.education')),
                ('skills', models.ManyToManyField(blank=True, help_text='Skills associated with the freelancer.', related_name='freelancers', to='skill.skill')),
            ],
            options={
                'verbose_name': 'Freelancer',
                'verbose_name_plural': 'Freelancers',
                'ordering': ['-created_at'],
            },
        ),
    ]
